#! /usr/bin/env ruby

require 'yaml'
require 'optparse'
require 'slurry'

# Load the command line options
options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: vspheremonitor [options]"

  opts.on("-v", "--verbose", "Be less quiet") do |v|
    options[:verbose] = v
  end

  opts.on("-c", "--config FILE", "Specify the configuration file") do |conf|
    options[:configfile] = conf
  end

  opts.on("-t", "--type [clean|report]", "The type of run to perform") do |t|
    options[:type] = t
  end

end.parse!

def loadconf (configfile)
  # Load the configuration file
  config = YAML::load(File.read(configfile))
  config
end


def run(options)

  # Determine if we should load the default configuration file
  if options[:configfile].nil?
    configfile = 'etc/slurry.yaml'
  else
    configfile = options[:configfile]
  end

  # Determin what kind of run we are asked to perform
  case options[:type]
  when "clean" # Remove everything from the cache
    Slurry.clean
  when "report" # Report on the state of the cache
    Slurry.report
  when "liaise" # Show the json around the floor
    config = loadconf(configfile)
    Slurry.liaise(config[:server],config[:port])
  when "runonce" # Show the json around the floor
    config = loadconf(configfile)
    report = JSON.parse(Slurry.runonce(config[:server],config[:port]))
    puts report.to_json
  else # Load json data from stdin
    Slurry.funnel
  end

end

run(options)
